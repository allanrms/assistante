# Generated by Django 5.2.6 on 2025-10-16 09:37

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_tag_contact_tag_core_tag_client__f0fb27_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nome do Serviço')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('duration_minutes', models.IntegerField(default=60, help_text='Duração padrão do serviço em minutos', verbose_name='Duração (minutos)')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Preço do serviço (opcional)', max_digits=10, null=True, verbose_name='Preço')),
                ('color', models.CharField(default='#3B82F6', help_text='Cor para identificação visual (ex: #FF5733)', max_length=7, validators=[django.core.validators.RegexValidator(message='Cor deve estar no formato hexadecimal (ex: #FF5733)', regex='^#[0-9A-Fa-f]{6}$')], verbose_name='Cor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.client', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_date', models.DateField(verbose_name='Data Agendada')),
                ('scheduled_time', models.TimeField(verbose_name='Horário Agendado')),
                ('duration_minutes', models.IntegerField(default=60, verbose_name='Duração (minutos)')),
                ('professional_name', models.CharField(blank=True, help_text='Nome do profissional que realizará o atendimento', max_length=255, null=True, verbose_name='Profissional')),
                ('status', models.CharField(choices=[('scheduled', 'Agendada'), ('confirmed', 'Confirmada'), ('completed', 'Concluída'), ('cancelled', 'Cancelada'), ('no_show', 'Não compareceu')], default='scheduled', max_length=20, verbose_name='Status')),
                ('payment_status', models.CharField(choices=[('pending', 'Pendente'), ('paid', 'Pago'), ('refunded', 'Reembolsado')], default='pending', max_length=20, verbose_name='Status do Pagamento')),
                ('notes', models.TextField(blank=True, help_text='Notas sobre o agendamento', null=True, verbose_name='Observações')),
                ('cancellation_reason', models.TextField(blank=True, null=True, verbose_name='Motivo do Cancelamento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='core.client', verbose_name='Cliente')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='core.contact', verbose_name='Contato')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='core.service', verbose_name='Serviço')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['-scheduled_date', '-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Nome do template para identificação', max_length=200, verbose_name='Título')),
                ('message', models.TextField(help_text='Texto do template. Use {nome_paciente}, {data_consulta}, etc.', verbose_name='Mensagem')),
                ('category', models.CharField(choices=[('greeting', 'Saudação'), ('confirmation', 'Confirmação'), ('reminder', 'Lembrete'), ('followup', 'Acompanhamento'), ('cancellation', 'Cancelamento'), ('feedback', 'Feedback'), ('other', 'Outro')], default='other', max_length=20, verbose_name='Categoria')),
                ('is_active', models.BooleanField(default=True, help_text='Se inativo, não aparecerá na lista de templates disponíveis', verbose_name='Ativo')),
                ('usage_count', models.IntegerField(default=0, help_text='Contador de quantas vezes o template foi usado', verbose_name='Vezes Usado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_templates', to='core.client', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Template de Mensagem',
                'verbose_name_plural': 'Templates de Mensagem',
                'ordering': ['-usage_count', 'title'],
                'indexes': [models.Index(fields=['client', 'is_active'], name='core_messag_client__64e9bb_idx'), models.Index(fields=['category'], name='core_messag_categor_23a721_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScheduledMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(help_text='Conteúdo da mensagem a ser enviada', verbose_name='Mensagem')),
                ('scheduled_for', models.DateTimeField(help_text='Data e hora para envio da mensagem', verbose_name='Agendado Para')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('sent', 'Enviada'), ('failed', 'Falhou'), ('cancelled', 'Cancelada')], default='pending', max_length=20, verbose_name='Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Enviada em')),
                ('error_message', models.TextField(blank=True, help_text='Detalhes do erro se o envio falhou', null=True, verbose_name='Mensagem de Erro')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('appointment', models.ForeignKey(blank=True, help_text='Agendamento vinculado (opcional)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_messages', to='core.appointment', verbose_name='Agendamento')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_messages', to='core.client', verbose_name='Cliente')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_messages', to='core.contact', verbose_name='Contato')),
            ],
            options={
                'verbose_name': 'Mensagem Agendada',
                'verbose_name_plural': 'Mensagens Agendadas',
                'ordering': ['scheduled_for'],
                'indexes': [models.Index(fields=['client', 'status', 'scheduled_for'], name='core_schedu_client__4b77c6_idx'), models.Index(fields=['contact', 'scheduled_for'], name='core_schedu_contact_d5c9df_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['client', 'is_active'], name='core_servic_client__9aaa8f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('client', 'name')},
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['client', 'scheduled_date'], name='core_appoin_client__abe8a3_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['contact', 'scheduled_date'], name='core_appoin_contact_c9b922_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='core_appoin_status_e978b8_idx'),
        ),
    ]
