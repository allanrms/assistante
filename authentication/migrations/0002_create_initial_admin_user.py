# Generated by Django 5.2.6 on 2025-10-08 10:03

from django.db import migrations
from django.contrib.auth.hashers import make_password


def create_initial_admin_user(apps, schema_editor):
    """
    Cria o usuário admin inicial e um client associado se não houver nenhum usuário no banco.
    """
    User = apps.get_model('authentication', 'User')
    Client = apps.get_model('core', 'Client')

    # Verifica se já existem usuários no banco
    if not User.objects.exists():
        # Cria o client inicial
        admin_client = Client.objects.create(
            full_name='Administrador',
            email='admin@gmail.com',
            client_type='individual',
            cpf='000.000.000-00',
            status='active',
        )

        # Cria o usuário admin inicial associado ao client
        User.objects.create(
            username='admin',
            email='admin@gmail.com',
            password=make_password('Assistante@123'),
            is_staff=True,
            is_superuser=True,
            is_active=True,
            email_confirmed=True,
            client=admin_client,
        )
        print("Cliente e usuário admin inicial criados com sucesso!")
        print("Email: admin@gmail.com")
        print("Senha: Assistante@123")


def reverse_create_admin(apps, schema_editor):
    """
    Remove o usuário admin e o client criados pela migração.
    """
    User = apps.get_model('authentication', 'User')
    Client = apps.get_model('core', 'Client')

    User.objects.filter(email='admin@gmail.com').delete()
    Client.objects.filter(email='admin@gmail.com').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
        ('core', '0002_tag_contact_tag_core_tag_client__f0fb27_idx_and_more'),
    ]

    operations = [
        migrations.RunPython(create_initial_admin_user, reverse_create_admin),
    ]
